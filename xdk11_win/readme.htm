<HTML><HEAD><TITLE>Director 11 XDK Readme</TITLE></HEAD><BODY><font size="-1" face="Verdana, Arial, Helvetica, sans-serif"> <HR width=45% align=left><H2>Director 11 XDK Readme</H2><HR width=45% align=left><h3><A NAME="RTFToC1">Introduction</A> </h3><P>This release of the Xtra Development Kit (XDK) is for use in developing Xtras for Adobe Director 11, as well as earlier versions of Macromedia Director. The Macintosh XDK has been updated to support Mach-O universal binary Xtras and the Xcode development environment. Currently there is not a way to use older CFM xtras with Mach-O executables, or to use the Mach-O xtras with the older CFM executables.Although the XDK has been updated for the latest release of Director, you can still use it to build Xtras that run on Director 7 and later (provided, of course, that your xtra doesn't require any newer features.) A complete list of all additions and changes made since the Director 6 XDK can be found in the <a href="Docs/updates.htm">XDK updates</a> file. The XDK can be used to develop Xtras for Authorware as well. </P><P>This XDK provides resources for developing extensions to Director, including Sprite Xtras, Transition Xtras, Scripting   Xtras, and Tool Xtras. <a href="Docs/index.htm">Documentation</a> files in HTML format, and a complete list   of <a href="Docs/updates.htm">updates</a> since the previous XDK are provided as part of this release.   A descriptive index of the example Xtras is provided in <a href="Examples/examples.htm">XDK Examples</a> document. <P>Be sure to see below for special tips about debugging Director MX 2004. Also be sure to check out   the <a href="Docs/drdg/index.htm#CrossPlatform">notes</a> about cross platform projectors. <hr width=45% align=left>  <h3> Table of folders included in the XDK </h3>    <TABLE width="884"  BORDER="2"><font size="-2">    <TR>      <TD WIDTH=116>Docs</TD>      <TD WIDTH=760>Director and Authorware XDK documentation.</TD>    </TR>    <TR>      <TD WIDTH=116>Examples</TD>      <TD WIDTH=760>Project and source files for several examples; also sample movies and pre-built versions of the example Xtras.</TD>    </TR>    <TR>      <TD WIDTH=116>Include</TD>      <TD WIDTH=760>Header files required for Xtra development</TD>    </TR>    <TR>      <TD WIDTH=116>Lib</TD>      <TD WIDTH=760>Additional useful code libraries. These are used in some of the examples.</TD>    </TR>    <TR>      <TD WIDTH=116>readme.htm</TD>      <TD WIDTH=760>This file.</TD>    </TR>    </font><TR>      <TD><font size="-2">Runtime</font></TD>      <TD><font size="-2">Macintosh CFM only. Header files for the runtime library which can be used for Macintosh Xtras. 	  The Mach-O xtras work with the standard Apple headers that come with Xcode.</font>  </TD>    </TR><font size="-2">    <TR>      <TD WIDTH=116>Utility</TD>      <TD WIDTH=760>Some useful tools.</TD>    </TR> </font></TABLE>   <hr width=45% align=left><h3><a name="DevEnvironment">Xtra</a> Development Environments</h3><h4>  <hr width=25% align=left></h4><h4>Windows</h4><p>The compiler currently supported for developing Xtras for Windows is Microsoft Visual C++ version 6.0 or 7.0 (the .NET version of MSVC). The workspace files are in VC6 format so you will see a conversion dialog when opening in the newer version. <br>  <br>To build an example Xtra, open one of the example .dsw files in Microsoft Visual C++ (e.g. <em>XDK\Examples\Sprite\Oval\WinProj\Oval.dsw</em>).   Choose Rebuild All from the Build menu. In Win32, the compiler will create a <em>Oval.x32</em> shared library in the <em>Oval\WinProj\Release\</em> directory. If you set the project to make a debug version, a debug version of the compiled Xtra will be put in <em>Oval\WinProj\Debug\</em>. <br>  <br>To make an Xtra that uses MFC you will need to modify the file <em>include\win32\moatyedg.h</em>. Add   an <code>#ifndef _USRDLL</code> around the <code>DllMain()</code> function in the <code>_MOA_XCODE_PREFACE</code> section to    disable it if <code>_USRDLL</code> is defined (this is a standard MFC #define). So the <code>_MOA_XCODE_PREFACE</code> is reduced to    just declaring <code>gXtraFileRef</code> if you're using MFC. MFC developers also need to set the value of <code>gXtraFileRef</code> somewhere    else. You may want to do this in an early <code>MoaCreate()</code> call like so:<br>   <code>gXtraFileRef = AfxGetInstanceHandle();</code> <h4>Debugging Windows Xtras</h4><ol>  <li><strong>Special information for MX 2004</strong>. Due to the activation library used in Director MX 2004, you can't     directly target the shipping Director application for debugging your Xtra - the application will quit when you try to     use it as your debug target. We suggest the following alternate solutions:    <ul>        <li>debug with a Projector rather than the authoring environment. You can use the &quot;Exclude All Xtras&quot; Publish           option, and create an <em>Xtras</em> directory next to your projector.</li>      <li>debug with Director MX if you have it available</li>      <li>if you have a DebugBreak(); statement you may be able to get the debugger invoked - however this technique doesn't         work with code that is run during startup, such as registration methods or the &quot;create method&quot; for an asset         xtra </li>      <li>Use the special &quot;save-and-publish-disabled&quot; version of Director MX 2004 included with the XDK. Temporarily         replace the <em>Director.exe</em> file with the application from the <em>Utility\Win</em> folder. [Hint: you can just         rename the original file as <em>RealDirector.exe</em>.]</li>    </ul>  </li>  <li>Open Visual C++ and build the Debug target for the project, as described above (i.e. the Oval project). </li>  <li>Copy a shortcut to the Debug version of the Xtra (i.e. <em>winproj\Debug\OvalSprite.x32</em>) into the <em>Director\Configuration\Xtras\</em> folder. Note that previous to version MX 2004, this directory was <em>called Director\Xtras\</em></li>  <li>In Visual C++, click &quot;Project&quot; and then &quot;Settings&quot;.</li>  <li>Select the &quot;Debug&quot; tab. Fill in the path to Director (or a projector) in the &quot;Executable for debug session&quot;     text field.</li>  <li>Set breakpoint(s) in one of your source files.</li>  <li>Click on the &quot;Build&quot; menu item, select &quot;Start Debug&quot; and then &quot;Go&quot;. Or use the F5 shortcut     for this.</li>  <li>Click &quot;OK&quot; when you are warned that Director contains no debugging information.</li></ol><hr width=25% align=left><h4>Macintosh</h4><p>This version of the XDK has been updated to support Xtra development using Apple's Xcode, and the Mach-O object format.  The XDK supports Universal Binary format or processor specific xtras.  For testing, there is a new Mach-O Shockwave plugin that supports these new format xtras.  Since there is not yet a Mach-O version of Director, the XDK includes a projector application called ProjectorDev.  This application is a Shockwave Projector, so Shockwave must be installed to run the projector.  You can install your xtras in an Xtras folder next to the application.  You specify the name of the movie(s) you want to play in the ini file.  The ini file must have Macintosh style line-endings rather than unix style line endings, and uses : as the folder separator character.  Note that pre-built Macho-O versions of 3 xtras aren't included: Wacky Dialog, BeepTool and Greeting</p><p>The new Xtra projects have been setup for development with Xcode version 2.4 and later.So far, all the development has been done assuming a target operating system of 10.4.At this time, the final details for Xtra package creation, downloading and verification have not been settled.Likewise, details about cross platform projector publishing is not yet available.</p><p>The Mach-O xtra format is a Bundle.Xtra bundles can still store resources in resource files;  all of the Adobe Xtras will be using data fork resource files for this purpose.When porting xtras to the Intel Processor macintosh, the most common area that needed attention was the format of data such as castmember data.Older xtras assumed Windows was the same as__LITTLE_ENDIAN__ and Macintosh was the same as __BIG_ENDIAN__.Since xtra castmember file data needs to be stored in a common format with both bit storage approaches, translation is needed for some cases.Each of the sample xtras in the XDK that write out some castmember data needed to have a small code change to deal with this issue.</p><p>When debugging plugins (such as Xtras) with Xcode/GDB, after locating an executable application for your project, I recommend that you type the rest of the path to the executable in Xcode.This helps gdb properly find breakpoints in your plugin when it launches the other app, which may not have any debug information.For example, change <em>/Applications/Adobe Director 11/Director.app</em> to <em>/Applications/Adobe Director 11/Director.app/Contents/MacOS/Director</em></p><hr width=25% align=left><h4>Older Macintosh Development - Director MX 2004 and earlier </h4><p>The compiler currently supported for developing Xtras on the Macintosh is Metrowerks CodeWarrior: the projects can be compiled   with version 6, 7, 8 or 9 of the compiler. The project files are distributed in version 6 format, if opened with a newer version   of CodeWarrior they will be automatically updated. The projects can be used to build Xtras for Macintosh OS 9 or OS X -   if you are building projects for OS X, it is recommended that you use version 8.3 or later of CodeWarrior so you can debug your code.<p> To build a new Xtra from CodeWarrior, open one of the project files (e.g. <em>XDK/Examples/Sprite/Oval/MacProj/OvalSprite.mcp</em>).   Select the target you want to build: for example, Classic Debug. Then choose Make from the CodeWarrior Project menu. The   compiler will produce a code module (e.g. <em>OvalSprite</em>) in the <em>MacProj/Classic/Debug/</em> folder. <p>All of the example projects have Carbon and Classic targets: the Classic targets are for Macintosh OS 8 and OS 9; the Carbon   targets are for OS X.<h4>Debugging Macintosh Xtras</h4><p>This technique will work with OSX and OS9. </p><ol>  <li><strong>Special information for MX 2004</strong>. Due to the activation library used in Director MX 2004, you can't     directly target the shipping Director application - the application will quit when you try to use it as your debug target.     We suggest the following alternate solutions:    <ul>        <li>debug with a Projector rather than the authoring environment. You can use the &quot;Exclude Xtras&quot; option,           and create an <em>Xtras</em> directory next to your projector.</li>      <li>debug with Director MX if you have it available</li>      <li>Use the special &quot;save-and-publish-disabled&quot; version of Director MX 2004 included with the XDK. Temporarily         replace the <em>Director</em> file with the application from the <em>/XDK/Utility/MacOSX/</em> folder. To do this         application subsitutuion:        <ul>          <li>control-click on the Director MX 2004 icon and choose the &quot;Show Package Contents&quot; menu item</li>          <li>Navigate to the folder <em>/Director MX 2004/Contents/MacOS/</em></li>          <li>Rename the file <em>Director MX</em> to <em>realDirectorMX</em> so you can restore it later</li>          <li>Copy the &quot;save-and-publish-disabled&quot; file <em>/XDK/Utility/MacOSX/Director MX</em> to this folder</li>        </ul>      </li>    </ul>  </li>  <li>Open CodeWarrior and build the Debug target for the project, as described above (i.e. the Oval project).</li>  <li>Copy an alias of the Debug version of the Xtra (i.e. <em>macproj/carbon/debug/OvalSprite</em>) into the <em>Director/Configuration/Xtras</em>/     folder. Note that previous to version MX 2004, this directory was called <em>Director/Xtras/</em></li>  <li>In CodeWarrior, open the &quot;Settings Panel&quot; for the debug target.</li>  <li>Select the &quot;&quot;Runtime Settings&quot; item of the Target section. Use the &quot;Choose...&quot; button to select     Director (or a Projector). </li>  <li>Set breakpoint(s) in one of your source files.</li>  <li>Choose the Debug item from the Project menu.</li></ol><h4><a name="Carbon">Preparing an</a> Xtra to run under Macintosh OS X</h4><ol>  <li>Director for OS X uses a Carbon implementation - not a Cocoa implementation.Turn on the "Carbon&quot; flag for the header     files. The simplest way to do this is to use a pre-compiled header for the project and have the following line in it.<br>    <code>#define TARGET_API_MAC_CARBON 1</code> Make sure the Carbon target of your project does not link with InterfaceLib or     any of the other OS 9 libraries. A Carbon xtra should only link with Carbonlib. </li>  <li>If you are packaging an Xtra for download, you can use the same macintosh kit that for OS 9 and OS X xtras. However,     the suffix indicating OS X package files is different - use .carb instead of .ppc for your carbon packages. Older versions     of the Xtras Packager movie force macintosh packages to have a .ppc suffix so you may have to rename the file. For example,     the following names could be used for a package files supporting Windows, Macintosh Classic and Macintosh OS X.    <ul>	  <li><em>ovalspritepack.w32</em></li>	  <li><em>ovalspritepack.ppc</em></li>	  <li><em>ovalspritepack.carb</em></li>    </ul></ol><hr width=45% align=left><h3>Xtra Developers Support</h3><P> This XDK is provided as is, without support. Adobe does offer a private mailing list monitored by Adobe engineers and extremely helpful developers.  <h4>Additional Sources of Information</h4><P> - General MOA information is in &quot;MOA Development Issues&quot; the<a href="Docs/moadg/index.htm"> MOA Developer's Guide.</a><BR>    <BR>  - Useful tips are in <a href="Docs/moadg/moadgtg.htm">&quot;Tips, Guidelines, and Gotchas&quot;</a> in the Multimedia Developer's Guide.<BR>  <BR>  - For the latest news, online docs, and FAQs about Xtras, surf to the Xtra Developers Center at <A HREF="http://www.adobe.com/support/xtras" >http://www.adobe.com/support/xtras</A>. <HR width=45% align=left><A HREF="Docs/copyrite.htm">Copyright &#169; 1999-2008, Adobe Macromedia Software LLC, Inc.</A></font></BODY></HTML>